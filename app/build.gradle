apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def ext = project.rootProject.ext
def libraries = ext.libraries
def testLibraries = ext.testLibraries

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "st.teamcataly.lokalocalpartner"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation libraries.appcompatv7
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    // Google
    implementation libraries.design

    // Network
    implementation libraries.retrofit
    implementation libraries.okHttp
    implementation libraries.loggingInterceptor
    implementation libraries.retrofitAdapterRxJava
    implementation libraries.retrofitConverterGson

    // RIB
    implementation libraries.rib
    implementation libraries.ribScreenStackBase
    kapt libraries.ribCompiler
    testImplementation libraries.ribTest

    // Dagger
    implementation libraries.daggerAndroid
    implementation libraries.daggerAndroidSupport
    kapt libraries.daggerAndroidProcessor
    kapt libraries.daggerCompiler

    // Epoxy
    implementation libraries.epoxy
    kapt libraries.epoxyProcessor
    implementation libraries.epoxyDataBinding

    // ImageLoading
    implementation libraries.picasso

    // QR Scanner
    implementation libraries.qrScanner

    implementation libraries.rxPermissions
    implementation libraries.gson
}
